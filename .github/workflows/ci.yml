name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      mongo:
        image: mongo:5
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load CI environment
        run: cat .env.ci >> $GITHUB_ENV
         
      # --- Backend cache ---
      - name: Cache backend node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install backend dependencies
        run: npm ci

      # --- Client cache ---
      - name: Cache client node_modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Build React client
        working-directory: ./client
        run: npm run build

      # --- Backend build & test ---
      - name: Build project
        run: npm run build

      - name: Start Express server
        run: npm run start &
      
      - name: Wait for server
        run: npx wait-on http://localhost:5000 --timeout 60000

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Run Frontend Tests
        working-directory: ./client
        run: npm test -- --watchAll=false --passWithNoTests